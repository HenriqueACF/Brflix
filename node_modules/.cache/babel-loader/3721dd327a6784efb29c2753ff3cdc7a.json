{"ast":null,"code":"var _jsxFileName = \"/home/henrique/\\xC1rea de Trabalho/Brflix/brflix/src/components/FormField/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nconst FormFieldWrapper = styled.div`\n  position: relative;\n  textarea {\n    min-height: 150px;\n  }\n  input[type=\"color\"] {\n    padding-left: 56px;\n  }\n`;\nconst Label = styled.label``;\nLabel.Text = styled.span`\n  color: #E5E5E5;\n  height: 57px;\n  position: absolute; \n  top: 0;\n  left: 16px;\n  \n  display: flex;\n  align-items: center;\n  \n  transform-origin: 0% 0%;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 300;\n  \n  transition: .1s ease-in-out;\n`;\nconst Input = styled.input`\n  background: #53585D;\n  color: #F5F5F5;\n  display: block;\n  width: 100%;\n  height: 57px;\n  font-size: 18px;\n  \n  outline: 0;\n  border: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid #53585D;\n  \n  padding: 16px 16px;\n  margin-bottom: 45px;\n  \n  resize: none;\n  border-radius: 4px;\n  transition: border-color .3s;\n  \n  &:focus {\n    border-bottom-color: #008000;\n  }\n  &:focus:not([type='color']) + ${Label.Text} {\n    transform: scale(.6) translateY(-10px);\n  }\n  ${({\n  value\n}) => {\n  const hasValue = value.length > 0;\n  return hasValue && css`\n        &:not([type='color']) + ${Label.Text} {\n          transform: scale(.6) translateY(-10px);\n        }\n      `;\n}}\n`;\n\nfunction FormField({\n  label,\n  type,\n  name,\n  value,\n  onChange\n}) {\n  const fieldId = `id_${name}`;\n  const isTextarea = type === \"textarea\";\n  const tag = isTextarea ? \"textarea\" : \"input\";\n  const hasValue = Boolean(value.length);\n  return /*#__PURE__*/React.createElement(FormFieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: fieldId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    as: tag,\n    id: fieldId,\n    type: type,\n    name: name,\n    hasValue: hasValue,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Label.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, label, \":\")));\n}\n\nFormField.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {}\n};\nFormField.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default FormField;","map":{"version":3,"sources":["/home/henrique/Área de Trabalho/Brflix/brflix/src/components/FormField/index.js"],"names":["React","PropTypes","styled","css","FormFieldWrapper","div","Label","label","Text","span","Input","input","value","hasValue","length","FormField","type","name","onChange","fieldId","isTextarea","tag","Boolean","defaultProps","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AAGA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAI;;;;;;;;CAApC;AAUA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAM,EAA3B;AAEAD,KAAK,CAACE,IAAN,GAAaN,MAAM,CAACO,IAAK;;;;;;;;;;;;;;;;CAAzB;AAkBA,MAAMC,KAAK,GAAGR,MAAM,CAACS,KAAM;;;;;;;;;;;;;;;;;;;;;;;kCAuBOL,KAAK,CAACE,IAAK;;;IAGzC,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAe;AACf,QAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAhC;AACA,SAAOD,QAAQ,IAAIV,GAAI;kCACOG,KAAK,CAACE,IAAK;;;OADzC;AAKD,CACF;CAlCD;;AAqCA,SAASO,SAAT,CAAmB;AAACR,EAAAA,KAAD;AAAQS,EAAAA,IAAR;AAAaC,EAAAA,IAAb;AAAmBL,EAAAA,KAAnB;AAA0BM,EAAAA;AAA1B,CAAnB,EAAuD;AAErD,QAAMC,OAAO,GAAI,MAAKF,IAAK,EAA3B;AACA,QAAMG,UAAU,GAAIJ,IAAI,KAAK,UAA7B;AACA,QAAMK,GAAG,GAAGD,UAAU,GAAG,UAAH,GAAgB,OAAtC;AAEA,QAAMP,QAAQ,GAAGS,OAAO,CAACV,KAAK,CAACE,MAAP,CAAxB;AAEA,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEK,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,KAAD;AACI,IAAA,EAAE,EAAEE,GADR;AAEI,IAAA,EAAE,EAAEF,OAFR;AAGI,IAAA,IAAI,EAAEH,IAHV;AAII,IAAA,IAAI,EAAEC,IAJV;AAKI,IAAA,QAAQ,EAAEJ,QALd;AAMI,IAAA,KAAK,EAAED,KANX;AAOI,IAAA,QAAQ,EAAEM,QAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAWE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KADH,MAXF,CADA,CADF;AAmBD;;AAEDQ,SAAS,CAACQ,YAAV,GAAyB;AACvBP,EAAAA,IAAI,EAAC,MADkB;AAEvBJ,EAAAA,KAAK,EAAE,EAFgB;AAGvBM,EAAAA,QAAQ,EAAC,MAAM,CAAE;AAHM,CAAzB;AAMAH,SAAS,CAACS,SAAV,GAAsB;AACpBjB,EAAAA,KAAK,EAAEN,SAAS,CAACwB,MAAV,CAAiBC,UADJ;AAEpBV,EAAAA,IAAI,EAACf,SAAS,CAACwB,MAFK;AAGpBR,EAAAA,IAAI,EAAChB,SAAS,CAACwB,MAAV,CAAiBC,UAHF;AAIpBd,EAAAA,KAAK,EAACX,SAAS,CAACwB,MAJI;AAKpBP,EAAAA,QAAQ,EAACjB,SAAS,CAAC0B;AALC,CAAtB;AAQA,eAAeZ,SAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\n\nconst FormFieldWrapper = styled.div`\n  position: relative;\n  textarea {\n    min-height: 150px;\n  }\n  input[type=\"color\"] {\n    padding-left: 56px;\n  }\n`;\n\nconst Label = styled.label``;\n\nLabel.Text = styled.span`\n  color: #E5E5E5;\n  height: 57px;\n  position: absolute; \n  top: 0;\n  left: 16px;\n  \n  display: flex;\n  align-items: center;\n  \n  transform-origin: 0% 0%;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 300;\n  \n  transition: .1s ease-in-out;\n`;\n\nconst Input = styled.input`\n  background: #53585D;\n  color: #F5F5F5;\n  display: block;\n  width: 100%;\n  height: 57px;\n  font-size: 18px;\n  \n  outline: 0;\n  border: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid #53585D;\n  \n  padding: 16px 16px;\n  margin-bottom: 45px;\n  \n  resize: none;\n  border-radius: 4px;\n  transition: border-color .3s;\n  \n  &:focus {\n    border-bottom-color: #008000;\n  }\n  &:focus:not([type='color']) + ${Label.Text} {\n    transform: scale(.6) translateY(-10px);\n  }\n  ${({ value }) => {\n    const hasValue = value.length > 0;\n    return hasValue && css`\n        &:not([type='color']) + ${Label.Text} {\n          transform: scale(.6) translateY(-10px);\n        }\n      `;\n  }\n}\n`;\n\nfunction FormField({label, type,name, value, onChange}){\n\n  const fieldId = `id_${name}`;\n  const isTextarea =  type === \"textarea\"\n  const tag = isTextarea ? \"textarea\" : \"input\";\n\n  const hasValue = Boolean(value.length);\n\n  return(\n    <FormFieldWrapper>\n    <Label htmlFor={fieldId}>\n      \n    <Input \n        as={tag}\n        id={fieldId}\n        type={type}\n        name={name}\n        hasValue={hasValue}\n        value={value}\n        onChange={onChange}\n        />\n      <Label.Text>\n        {label}: \n      </Label.Text>\n        </Label>\n    </FormFieldWrapper>\n  )  \n}\n\nFormField.defaultProps = {\n  type:'text',\n  value: '',\n  onChange:() => {}\n\n}\nFormField.propTypes = {\n  label: PropTypes.string.isRequired,\n  type:PropTypes.string,\n  name:PropTypes.string.isRequired,\n  value:PropTypes.string,\n  onChange:PropTypes.func,\n};\n\nexport default FormField;"]},"metadata":{},"sourceType":"module"}